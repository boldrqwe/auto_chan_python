import openai
import os

# Настройки OpenAI API
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

# Класс для работы с OpenAI ChatGPT
class ChatGPTClient:
    def __init__(self, api_key: str):
        self.api_key = api_key
        openai.api_key = api_key

    def generate_response(self) -> str:
        prompt = (
            "Создай анекдот с телеграм-разметкой, который будет смешным, актуальным и понятным для российских пользователей. "
            "В ответе должен быть только анекдот, без лишних слов и пояснений. Укажи в анекдоте:\n"
            "\n"
            "Тема: выбери одну из следующих — политика, экономика, технологии, культура, спорт или бытовая жизнь.\n"
            "Контекст: актуальные новости, тренды в социальных сетях, мемы или популярные шутки.\n"
            "Формат:\n"
            "Смешной диалог, ситуация или остроумный комментарий.\n"
            "Используй максимально много элементов Telegram-разметки: курсив, жирный текст, моноширинный текст, цитаты, эмодзи и акценты с помощью символов.\n"
            "Стиль: лаконичный, яркий, с неожиданной концовкой.\n"
            "Тон: дружелюбный, ироничный или саркастический (без грубости).\n"
            "Целевая аудитория: взрослые (18–50 лет), россияне с типичным чувством юмора.\n"
            "Примеры персонажей:\n"
            "Чиновники, программисты, таксисты, пенсионеры, студенты, покупатели, учителя, врачи, блогеры, дети, родители, соседи, продавцы, водители маршруток, госслужащие, геймеры, рабочие, айтишники, спортсмены, туристы.\n"
            "Цензура: без грубых слов и оскорблений, но допускается лёгкая ирония и фразы в духе популярного интернет-сленга.\n"
            "Дополнительно:\n"
            "Добавь больше телеграм-разметки для акцентов и эмоций.\n"
            "Используй эмодзи для усиления эффекта.\n"
            "Добавь неожиданный поворот в концовке, чтобы анекдот был максимально ярким."
        )
        try:
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[{"role": "user", "content": prompt}],
                max_tokens=150,
                temperature=0.7
            )
            return response["choices"][0]["message"]["content"].strip()
        except Exception as e:
            return f"Ошибка при генерации ответа: {e}"
